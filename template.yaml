AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Deploying NestJS application to AWS Lambda with API Gateway and Lambda Layer

Resources:
  # Main Lambda Function
  NestJsLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist         # Directory containing the compiled app
      Handler: src/main.handler   # Entry point for the Lambda function
      Runtime: nodejs18.x
      MemorySize: 512
      Timeout: 30
      Policies:
        - AWSLambdaBasicExecutionRole
      Layers:
        - !Ref DependenciesLayer  # Attach the Lambda layer containing dependencies
      Events:
        DefaultRoute:
          Type: Api
          Properties:
            RestApiId: !Ref NestJsApiGateway
            Path: /
            Method: ANY
        ProxyRoute:
          Type: Api
          Properties:
            RestApiId: !Ref NestJsApiGateway
            Path: /{proxy+}
            Method: ANY

  # Lambda Layer for Dependencies
  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: DependenciesLayer
      Description: Contains dependencies for the NestJS application
      ContentUri: ./lambda-layer/layer.zip   # Path to the zipped layer
      CompatibleRuntimes:
        - nodejs18.x

  # API Gateway
  NestJsApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: NestJsApiGateway
      StageName: Prod
      ApiKeySourceType: HEADER
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "NestJs API"
          description: "API Gateway for NestJs application"
          version: "1.0"
        paths:
          /:
            x-amazon-apigateway-any-method:
              produces:
                - application/json
              responses:
                default:
                  description: "Default response for /"
              security:
                - api_key: []
          /{proxy+}:
            x-amazon-apigateway-any-method:
              produces:
                - application/json
              responses:
                default:
                  description: "Default response for /{proxy+}"
              security:
                - api_key: []
        securityDefinitions:
          api_key:
            type: "apiKey"
            name: "x-api-key"
            in: "header"

  # API Key
  NestJsApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: NestJsApiKey
      Enabled: true
      StageKeys:
        - RestApiId: !Ref NestJsApiGateway
          StageName: Prod

  # Usage Plan
  NestJsUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: NestJsUsagePlan
      ApiStages:
        - ApiId: !Ref NestJsApiGateway
          Stage: Prod
      Throttle:
        RateLimit: 1000
        BurstLimit: 200
      Quota:
        Limit: 10000
        Period: MONTH

  # Usage Plan Key
  NestJsUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref NestJsApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref NestJsUsagePlan